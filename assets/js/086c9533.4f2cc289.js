"use strict";(self.webpackChunksolidwebsite=self.webpackChunksolidwebsite||[]).push([[4695],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=p(n),m=r,f=l["".concat(c,".").concat(m)]||l[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5486:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var a=n(3117),r=(n(7294),n(3905));const o={sidebar_position:1},i="Visual programing",s={unversionedId:"introduction/concept",id:"introduction/concept",title:"Visual programing",description:"Solid is an app for creating 3D objects and animations by programming. Powered by Google Blockly, it helps students learn the basics of programming. The 'basic' mode introduces the concepts of statements to place, turn, add and subtract objects in 3D space. It shows how loops can be used to quickly make complex patterns and arrays and how objects can be made smart with 'if then' statements. The 'advanced' mode introduces 3D transformations, boolean operations, profiles, parts and keyframe animation. In the 'programmer' mode you can use the power of modern JavaScript such as arrow functions, maps and filters. When your design is ready you can share it with other users, create a file for 3D printing or for importing in other modeling and animation systems.",source:"@site/docs/introduction/concept.md",sourceDirName:"introduction",slug:"/introduction/concept",permalink:"/docs/introduction/concept",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",next:{title:"Installation",permalink:"/docs/introduction/installation"}},c={},p=[{value:"Basic",id:"basic",level:2},{value:"Advanced",id:"advanced",level:2},{value:"Programmer",id:"programmer",level:2}],d={toc:p},l="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(l,(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"visual-programing"},"Visual programing"),(0,r.kt)("p",null,"Solid is an app for creating 3D objects and animations by programming. Powered by Google Blockly, it helps students learn the basics of programming. The 'basic' mode introduces the concepts of statements to place, turn, add and subtract objects in 3D space. It shows how loops can be used to quickly make complex patterns and arrays and how objects can be made smart with 'if then' statements. The 'advanced' mode introduces 3D transformations, boolean operations, profiles, parts and keyframe animation. In the 'programmer' mode you can use the power of modern JavaScript such as arrow functions, maps and filters. When your design is ready you can share it with other users, create a file for 3D printing or for importing in other modeling and animation systems."),(0,r.kt)("p",null,"This application is intended for quick and easy generation of 3D objects using a technique called visual programming. The basic mode helps students to learn the basics of programming by dragging and dropping programming statements. It explains the concepts of 3D transformations, statements, iteration and conditional statements. The advanced mode supports subtracting and intersecting volumes, profiles, parameters, part libraties and keyframe animation. In the 'programmer' mode you can use the power of modern JavaScript such as arrow functions, maps and filters. When your design is ready you can share it with other users, create a file for 3D printing or import in other modeling and animation systems. "),(0,r.kt)("p",null,"This application is intended for quick and easy generation of 3D objects using a technique called visual programming. You can make complex objects with built-in logic just by drag-and-drop programming statements."),(0,r.kt)("p",null,"The application be used to help students learn the basics of computer programming. You can also use it as a tool for conceptual design and 3D printing products and buildings."),(0,r.kt)("h2",{id:"basic"},"Basic"),(0,r.kt)("p",null,"This is the most simple mode for beginners and children in primary education with just a few basic shapes and commands to move and rotate. You learn to drag-and-drop objects and to insert or remove statements. Although it is assumed that users have basic reading capabilities it is not required. The colors of the statements match the colors of the objects. Also, the color of the translate statements match the direction of arrows in 3D space. Basic concepts of loops, conditionals and animation are introduced."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7428).Z,width:"2732",height:"1802"})),(0,r.kt)("h2",{id:"advanced"},"Advanced"),(0,r.kt)("p",null,"This mode includes all modeling functionality.\nThe concept of X-, Y- and Z-direction is introduced and the ",(0,r.kt)("inlineCode",{parentName:"p"},"intersect")," operation is introduces.  It extends the basic shapes with rotations sweeps, extrusion profiles and walls. There are loop statements with variables and you can use variables to make parametric parts, which can be compared to functions in programming languages. It also supports keyframe animation, mathematical expressions and material properties such as transparency, shininess and emission."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(9445).Z,width:"2732",height:"1802"})),(0,r.kt)("h2",{id:"programmer"},"Programmer"),(0,r.kt)("p",null,"In the programmer you have access to all functionality in the advanced mode but instead of dragging blocks you can type JavaScript in a text editor. This makes programming parts much faster and allows you to create more complex of intelligent objects. All modern JavaScript ECMAScript2019 functionality is supported such as maps, array operations, filters, sets, regular expressions and arrow functions.  "),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8745).Z,width:"2732",height:"1802"})))}u.isMDXComponent=!0},8745:function(e,t,n){t.Z=n.p+"assets/images/box_mount-bee55ffb5f7db8c15184eb8119b581c4.png"},7428:function(e,t,n){t.Z=n.p+"assets/images/gate-34b18adeb11188110c62e4715999ab86.png"},9445:function(e,t,n){t.Z=n.p+"assets/images/rotor_3-4d44b01d81cb1b08a40223c2ceefa8e3.png"}}]);