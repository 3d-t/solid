"use strict";(self.webpackChunksolidwebsite=self.webpackChunksolidwebsite||[]).push([[1798],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,m=d["".concat(p,".").concat(u)]||d[u]||h[u]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},363:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var n=r(3117),a=(r(7294),r(3905));const i={sidebar_position:50},o="Parts",s={unversionedId:"programmer/parts",id:"programmer/parts",title:"Parts",description:"The object below shows a widget that can be attached to a box so that it can be fixed with a screw. It has a parameter d for the diameter of the screw and a parameter h for the height or thickness. We also have a parameter w for defining the width of the part. The value is calculated as the size of the inner diameter d plus 2. The part contains two blocks with objects and a subtract operation. We can now save the object under the name Widget. The first two lines with the var statement define the parameters for this part. The var statements that follow a blank line are internal variables.",source:"@site/docs/programmer/parts.md",sourceDirName:"programmer",slug:"/programmer/parts",permalink:"/docs/programmer/parts",draft:!1,tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"defaultSidebar",previous:{title:"Extrude and sweeps",permalink:"/docs/programmer/extrude"},next:{title:"Reference",permalink:"/docs/programmer/reference"}},p={},c=[],l={toc:c},d="wrapper";function h(e){let{components:t,...i}=e;return(0,a.kt)(d,(0,n.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"parts"},"Parts"),(0,a.kt)("p",null,"The object below shows a widget that can be attached to a box so that it can be fixed with a screw. It has a parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"d")," for the diameter of the screw and a parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"h")," for the height or thickness. We also have a parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"w")," for defining the width of the part. The value is calculated as the size of the inner diameter ",(0,a.kt)("inlineCode",{parentName:"p"},"d")," plus ",(0,a.kt)("inlineCode",{parentName:"p"},"2"),". The part contains two blocks with objects and a ",(0,a.kt)("inlineCode",{parentName:"p"},"subtract")," operation. We can now save the object under the name ",(0,a.kt)("inlineCode",{parentName:"p"},"Widget"),". The first two lines with the ",(0,a.kt)("inlineCode",{parentName:"p"},"var")," statement define the parameters for this part. The ",(0,a.kt)("inlineCode",{parentName:"p"},"var")," statements that follow a blank line are internal variables."),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(8741).Z,width:"2732",height:"1802"})),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Widget")," can now be used in another object by using the function ",(0,a.kt)("inlineCode",{parentName:"p"},"part"),". The first argument is the name of the part and the following numbers are the parameters for this part. In this case there are two parameters ",(0,a.kt)("inlineCode",{parentName:"p"},"d")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"h"),". Note that the ",(0,a.kt)("inlineCode",{parentName:"p"},"turn")," statement in the ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," statement includes a rotation that includes a multiplication with the iteration variable ",(0,a.kt)("inlineCode",{parentName:"p"},"i"),". This is because the transformations are inside a block statement and are therefore reset every time the block is executed."),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(8745).Z,width:"2732",height:"1802"})))}h.isMDXComponent=!0},8745:function(e,t,r){t.Z=r.p+"assets/images/box_mount-bee55ffb5f7db8c15184eb8119b581c4.png"},8741:function(e,t,r){t.Z=r.p+"assets/images/widget-2f9f363732a76376e97e1f9d7d9a3d22.png"}}]);